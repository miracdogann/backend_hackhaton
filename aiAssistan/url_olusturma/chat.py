from google import genai
import os
from dotenv import load_dotenv
import json
import re
from .kategoriBulma import kategori_bulma
from .beden import beden_bulma
from .cinsiyet import cinsiyet_bulma
from .create_url_trendyol import url_trendyol
from .search_trendyol_url import search_url
from .renk import renk_bulma

load_dotenv()  # .env dosyasÄ±nÄ± yÃ¼kler

api_key = os.getenv("GEMINI_API_KEY")
if not api_key:
    raise Exception("GEMINI_API_KEY ortam deÄŸiÅŸkeni bulunamadÄ±!")

client = genai.Client(api_key=api_key)

chat_history = []

def chat_with_memory(user_message):
    # Promptu JSON Ã§Ä±ktÄ± Ã¼retecek ÅŸekilde ayarla
    prompt = (
        "KullanÄ±cÄ± mesajÄ±nÄ± analiz et ve Ã¶nce mesajÄ±n amacÄ± sohbet mi yoksa alÄ±ÅŸveriÅŸ mi olduÄŸunu belirle.\n"
        "EÄŸer sohbetse, Trendyol alÄ±ÅŸveriÅŸ asistanÄ± gibi samimi, yardÄ±mcÄ± ve doÄŸal bir ÅŸekilde yanÄ±t ver. YanÄ±t JSON formatÄ±nda ÅŸu ÅŸekilde olmalÄ±:\n"
        "{\n"
        "  \"niyet\": \"sohbet\",\n"
        "  \"cevap\": \"Trendyol asistanÄ± tarzÄ±nda samimi ve doÄŸal bir yanÄ±t\"\n"
        "}\n"
        "Ã–rnek sohbet yanÄ±tÄ±: 'Merhaba! ğŸ˜Š Trendyolâ€™da alÄ±ÅŸveriÅŸ keyfini yaÅŸamak iÃ§in buradayÄ±m. Ne hakkÄ±nda sohbet etmek istersin, yeni trendler mi, yoksa baÅŸka bir ÅŸey mi?' veya 'Hafta sonu iÃ§in alÄ±ÅŸveriÅŸ planÄ±n var mÄ±? ğŸ˜„ Sana en gÃ¼zel Ã¶nerileri sunabilirim!'\n"
        "EÄŸer alÄ±ÅŸveriÅŸ isteÄŸi varsa, aÅŸaÄŸÄ±daki gibi JSON Ã§Ä±ktÄ±sÄ± ver:\n"
        "{\n"
        "  \"niyet\": \"alisveris\",\n"
        "  \"istenen\": \"ÃœrÃ¼n kategorisi veya hediye tÃ¼rÃ¼\",\n"
        "  \"fiyat_araligi\": \"min-max\",\n"
        "  \"cinsiyet\": \"erkek | kadÄ±n | Ã§ocuk | belli deÄŸil\",\n"
        "  \"marka\": \"belli deÄŸil veya marka adÄ±\",\n"
        "  \"beden\": \"belli deÄŸil veya s,m,l,xl gibi\",\n"
        "  \"ozellik\": \"belli deÄŸil veya gb, ram, kapasite, aÄŸÄ±rlÄ±k vb gibi\",\n"
        "  \"renk\": \"belli deÄŸil veya mavi, siyah, yeÅŸil gibi\"\n"
        "}\n\n"
        "Kurallar:\n"
        "- Fiyat aralÄ±ÄŸÄ± varsa '500-800' formatÄ±nda yaz.\n"
        "- Fiyat tek belirtilmiÅŸse, Ã¶rneÄŸin '500 tl' ise '0-500' yaz.\n"
        "- Fiyat belli deÄŸilse 'belli deÄŸil' yaz, asla '0-0' yazma.\n"
        "- Cinsiyet belirtilmemiÅŸse 'belli deÄŸil' yaz.\n"
        "- Cinsiyeti bulmak iÃ§in detaylÄ± analiz yap! 'kardeÅŸim', 'abim', 'ablam', 'babam', 'annem', 'dayÄ±m', 'halam', 'kuzenim' gibi kelimelerden Ã§Ä±karÄ±m yap.\n"
        "- Marka belirtilmemiÅŸse 'belli deÄŸil' yaz.\n"
        "- Beden belirtilmemiÅŸse 'belli deÄŸil' yaz.\n"
        "- Birden fazla beden varsa virgÃ¼lle ayÄ±r (Ã¶rn: 's,m,l').\n"
        "- EÄŸer marka ve Ã¼rÃ¼n adÄ± aÃ§Ä±kÃ§a belirtilmiÅŸse, 'istenen' kÄ±smÄ±na ikisini birleÅŸtirerek yaz (Ã¶rn: 'iphone 15 pro max 512 gb').\n"
        "- 'istenen' alanÄ± mesajdaki ana Ã¼rÃ¼nÃ¼ Ã¶zetlemeli, Ã¶rneÄŸin 'hediye', 'telefon', 'ayakkabÄ±'.\n"
        "- AlÄ±ÅŸveriÅŸ isteÄŸinde, Trendyol tarzÄ±nda yardÄ±mcÄ± bir Ã¼slup kullan. Ã–rneÄŸin, 'Hemen sana iPhone 16 Pro Max 512 GB iÃ§in en iyi seÃ§enekleri bulalÄ±m! ğŸ˜Š' gibi.\n\n"
        f"KullanÄ±cÄ± mesajÄ±: \"{user_message}\"\n"
        "JSON Ã§Ä±ktÄ±yÄ± ver:"
    )

    # Ã–nceki sohbetleri ekle
    full_conversation = ""
    for entry in chat_history:
        full_conversation += f"KullanÄ±cÄ±: {entry['user']}\nAsistan: {entry['assistant']}\n"
    full_conversation += prompt

    # Model Ã§aÄŸrÄ±sÄ±
    response = client.models.generate_content(
        model="gemini-2.5-flash",
        contents=full_conversation
    )
    assistant_message = response.text.strip()
    cleaned = re.sub(r"```json|```", "", assistant_message).strip()

    # JSON parse et
    try:
        data = json.loads(cleaned)
    except json.JSONDecodeError:
        data = {"niyet": "sohbet", "cevap": "ÃœzgÃ¼nÃ¼m, mesajÄ±nÄ±zÄ± anlayamadÄ±m. ğŸ˜Š AlÄ±ÅŸveriÅŸ mi yapalÄ±m, yoksa baÅŸka bir konuda mÄ± sohbet edelim?"}

    # Niyet kontrolÃ¼
    if data.get("niyet") == "sohbet":
        # Sohbet durumunda sadece cevabÄ± dÃ¶ndÃ¼r
        chat_response = data.get("cevap")
        chat_history.append({
            "user": user_message,
            "assistant": chat_response
        })
        return {
            "gemini_response": chat_response,
        }
    else:
        # AlÄ±ÅŸveriÅŸ durumunda mevcut iÅŸ mantÄ±ÄŸÄ±nÄ± koru
        kategori = data.get("istenen", "belli deÄŸil").lower()
        fiyat = data.get("fiyat_araligi", "belli deÄŸil").lower()
        beden = data.get("beden", "belli deÄŸil").lower()
        cinsiyet = data.get("cinsiyet", "belli deÄŸil").lower()
        marka = data.get("marka", "belli deÄŸil").lower()
        renk = data.get("renk", "belli deÄŸil").lower()
        ozellik = data.get("ozellik", "belli deÄŸil").lower()
        url = None
        if beden != "belli deÄŸil":
            beden = beden_bulma(beden=beden)
            print("beden:", beden)

        if cinsiyet != "belli deÄŸil":
            cinsiyet = cinsiyet_bulma(cinsiyet=cinsiyet)
            print("cinsiyet:", cinsiyet)

        if renk != "belli deÄŸil":
            renk = renk_bulma(renk)
            print("renk:", renk)

        if marka == "belli deÄŸil":
            print("marka yok")
            kategori = kategori_bulma(kategori=kategori)
            print("kategori:", kategori)
            url = url_trendyol(kategori=kategori, fiyat=fiyat, renk=renk, beden=beden, cinsiyet=cinsiyet)
        else:
            if ozellik != "belli deÄŸil" and ozellik not in kategori:
                kategori = kategori + " " + ozellik
            if marka not in kategori:
                kategori = marka + " " + kategori
                print("marka ve kategori birleÅŸtirildi:", kategori)
            else:
                print("marka kategori iÃ§inde var, iÅŸlem yapÄ±lmadÄ±.")
            url = search_url(kategori=kategori, fiyat=fiyat, renk=renk, beden=beden, cinsiyet=cinsiyet)

        # AlÄ±ÅŸveriÅŸ yanÄ±tÄ±nÄ± Trendyol asistanÄ± tarzÄ±nda oluÅŸtur
        alisveris_response = (
            f"Hemen sana en iyi seÃ§enekleri bulalÄ±m! ğŸ˜Š "
            "Trendyolâ€™da harika Ã¼rÃ¼nler seni bekliyor!"
        ).strip()

        print("gemini yanÄ±tÄ± ",alisveris_response , "url ,",url)
        # Sohbet geÃ§miÅŸini gÃ¼ncelle
        chat_history.append({
            "user": user_message,
            "assistant": alisveris_response
        })

        return {
            "gemini_response": alisveris_response,
            "url": url
        }

# TEST
if __name__ == "__main__":
    test_cases = [
        "Merhaba, nasÄ±lsÄ±n?",
        "Telefon AlacaÄŸÄ±m iPhone 16 Pro Max, 512 GB olsun yardÄ±mcÄ± olur musun",
        "Ã‡ocuÄŸum iÃ§in defacto marka 500-800 TL arasÄ± xl,l gÃ¶mlek istiyorum",
        "4 yaÅŸÄ±ndaki kardeÅŸim iÃ§in Ã§izim tableti almak istiyorum 600 tl param var yardÄ±mÄ±cÄ± olur musun",
        "Annem iÃ§in elbise arÄ±yorum, beden M ve L bÃ¼tÃ§em 900 tl",
        "Ev iÃ§in ArÃ§elik Marka Ã‡amaÅŸÄ±r makinesi alacaÄŸÄ±m bÃ¼tÃ§em 55000 Tl ye kadar var beyaz renk olsun",
        "Ã‡ocuklar iÃ§in mavi renk ayakkabÄ± istiyorum, en fazla 900 TL olsun"
    ]

    for user_input in test_cases:
        print(f"\nKullanÄ±cÄ±: {user_input}")
        result = chat_with_memory(user_input)
        print("Gemini JSON output:", result["gemini_response"])
        print("URL:", result["url"])